#!/bin/bash

# Script de Deployment LOCAL para MVP Proxy Scraper
# Uso: ./scripts/docker-deploy-local.sh [--build] [--clean]

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Default values
BUILD_IMAGES="false"
CLEAN="false"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --build)
            BUILD_IMAGES="true"
            shift
            ;;
        --clean)
            CLEAN="true"
            shift
            ;;
        -h|--help)
            echo "Uso: $0 [--build] [--clean]"
            echo "  --build  Build im√°genes antes de deploy"
            echo "  --clean  Limpiar contenedores e im√°genes anteriores"
            exit 0
            ;;
        *)
            echo "Opci√≥n desconocida: $1"
            exit 1
            ;;
    esac
done

echo -e "${BLUE}üöÄ MVP Proxy Scraper - Deployment LOCAL${NC}"
echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo -e "${YELLOW}üìã Configuraci√≥n:${NC}"
echo -e "   Entorno: LOCAL"
echo -e "   Build: ${BUILD_IMAGES}"
echo -e "   Clean: ${CLEAN}"
echo -e "   Puertos: Frontend 3800, Backend 3801"
echo ""

# Clean if requested
if [[ "$CLEAN" = "true" ]]; then
    echo -e "${BLUE}üßπ Limpiando contenedores e im√°genes anteriores...${NC}"
    docker compose -f docker-compose.local.yml down --remove-orphans || true
    docker system prune -f || true
fi

# Stop existing services
echo -e "${BLUE}üõë Deteniendo servicios existentes...${NC}"
docker compose -f docker-compose.local.yml down || true

# Build images if requested
if [[ "$BUILD_IMAGES" = "true" ]]; then
    echo -e "${BLUE}üî® Building im√°genes para LOCAL...${NC}"
    docker compose -f docker-compose.local.yml build --no-cache
fi

# Start deployment
echo -e "${BLUE}üöÄ Iniciando deployment LOCAL...${NC}"

if docker compose -f docker-compose.local.yml up -d --wait; then
    echo -e "${GREEN}‚úÖ Servicios iniciados exitosamente${NC}"
else
    echo -e "${RED}‚ùå Error al iniciar servicios${NC}"
    exit 1
fi

# Wait for services to be ready
echo -e "${BLUE}‚è≥ Esperando que los servicios est√©n listos...${NC}"
sleep 15

# Show deployment status
echo -e "${GREEN}üéâ Deployment LOCAL completado!${NC}"
echo ""
echo -e "${BLUE}üìä Estado de servicios:${NC}"
docker compose -f docker-compose.local.yml ps

echo ""
echo -e "${BLUE}üìã URLs de acceso LOCAL:${NC}"
echo -e "   Frontend: ${GREEN}http://localhost:3800${NC}"
echo -e "   Backend:  ${GREEN}http://localhost:3801${NC}"

echo ""
echo -e "${YELLOW}üí° Comandos √∫tiles:${NC}"
echo -e "   üìä Ver logs: ${GREEN}docker compose -f docker-compose.local.yml logs -f${NC}"
echo -e "   üîç Estado: ${GREEN}docker compose -f docker-compose.local.yml ps${NC}"
echo -e "   üõë Parar: ${GREEN}docker compose -f docker-compose.local.yml down${NC}"

# Test connectivity
echo ""
echo -e "${BLUE}üß™ Testing conectividad...${NC}"
if curl -s http://localhost:3801/health > /dev/null; then
    echo -e "${GREEN}‚úÖ Backend respondiendo correctamente${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Backend a√∫n no responde, puede necesitar m√°s tiempo${NC}"
fi 